四种外键级联：
CASCADE  级联策略：使用此种策略时主表的记录被删除或者主键字段被修改时会同步删除或修改子表

NO ACTION 无动作策略：使用此种策略时要删除主表必须先删除子表，要删除主表的记录必须先删除子表关联的记录，不能更新主表主键字段的值。

RSTRICT 主表约束策略：此种策略对主表的约束跟 NO ACTION 一样

SET NO 置空策略：使用此种策略时，如果主表被删除或者主键被更改，则将子表中的外键设置为NULL。需要注意的是，如果子表的外键是主键或者是设置为NOT NULL的，则主表的删除和主键的更改跟 NO ACTION 一样。

学生表：
表sql: CREATE TABLE if not exists `students_info` ( `students_id` int (11) NOT NULL ,`stadents_name` varchar (128) NOT NULL ,`students_code` varchar (128) NOT NULL ,`class_id` int (11) NOT NULL ,`teacher_id` int (11) NOT NULL ,`course_id` int (32) NOT NULL ,`works_id` int (32) NOT NULL , PRIMARY KEY (`students_id`) ) COMMENT = "学生信息表" ENGINE = innodb DEFAULT CHARACTER SET = "utf8" COLLATE = "utf8_general_ci" 
外键sql: ALTER TABLE `students_info` ADD CONSTRAINT class_key FOREIGN KEY (`class_id`) REFERENCES `tianbianblock`.`students_info` (`class_id`) ON DELETE CASCADE ON UPDATE CASCADE, ADD CONSTRAINT teacher_key FOREIGN KEY (`teacher_id`) REFERENCES `tianbianblock`.`students_info` (`teacher_id`) ON DELETE CASCADE ON UPDATE CASCADE, ADD CONSTRAINT course_id FOREIGN KEY (`course_id`) REFERENCES `tianbianblock`.`students_info` (`course_id`) ON DELETE CASCADE ON UPDATE CASCADE, ADD CONSTRAINT works_key FOREIGN KEY (`works_id`) REFERENCES `tianbianblock`.`students_info` (`works_id`) ON DELETE CASCADE ON UPDATE CASCADE


班级表：

表sql：CREATE TABLE if not exists `class_info` ( `class_id` int (11) NOT NULL ,`class_name` varchar (128) NOT NULL ,`grade` varchar (128) NOT NULL , PRIMARY KEY (`class_id`) ) COMMENT = "班级信息表" ENGINE = innodb DEFAULT CHARACTER SET = "utf8" COLLATE = "utf8_general_ci" 

