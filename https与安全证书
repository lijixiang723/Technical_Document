						https与安全证书的知识总结
在说https之前，要先说一下https的加密机制。众所周知，https的加密机制是采用对称加密和非对称加密两种方式。

对称加密：客户端和服务端共用一个秘钥，即客户端发送的请求服务器的密文信息用这个秘钥去解密，反之如此。
缺点：这个秘钥需要双方知晓，那么只保证双方知道，还存在问题。因为服务端把密文传输给客户端可能会被别人截取。

非对称加密：即有两把秘钥，一把叫做公钥，一把叫做私钥。用公钥加密的内容只有私钥能解开，私钥加密的内容，只有公钥能解开。
缺点：服务端发送一个公钥给客户端，客户端通过公钥加密，但是最开始公钥是服务端明文传输的，同样有被盗取的可能，然后解密服务端发过来的解密数据。

改良方案：用两组公钥和私钥。即客户端有一个公钥A私钥A，服务端有一个公钥B私钥B。客户端把公钥A明文传输给服务端，然后服务端吧公钥B明文传输给客户端。之后客户端向服务端传输的所有东西都用公钥B加密，服务端收到后用私钥B解密。反之如此。 但https没有使用这种方案，因为非对称加密非常耗时。对称加密很快。

非对称加密+对称加密（https采用的方案）：
即服务端有非对称加密的公钥A和私钥A，公钥A服务端通过明文传输给客户端，客户端随机生成一个秘钥C，通过公钥A加密，传输给服务端，服务端用私钥A解密，就可以得到秘钥C，再通过秘钥C进行对称加密传输。
缺点：如果有一个中间人，截取的服务端的公钥A，改成自己非对称加密生成的公钥B（同时也有一个私钥B）,那么客户端并不知道服务端的身份，所以将生成的秘钥C使用公钥B加密了。再发送给服务端，中间人再次截取，通过私钥B解密，从而拿到了服务端和客户端以后通信的秘钥。

以上问题，所有的难点究其根源，在于客户端和服务端在通过传输的途径知道对方的密钥而不被其他人知道引出的一系列方案。最后变为 如何证明客户端收到的公钥是目标服务端的公钥？ 于是引出数字证书。


在使用https前，会向ca机构申请一份数字证书。数字证书里面有证书持有者，证书持有者公钥，访问域名，等等信息。服务端把证书传输给客户端，客户端从这个里面取公钥，就能实现收到的公钥是目标服务端的公钥。

那么又有一个问题就是数字证书如果被篡改，会怎么办。 解决的办法就是服务器把证书内容hash加密一下，生成一个数字签名,再一并发送给客户端。客户端收到信息，将证书以同样的方式加密，然后比对生成的hash值是否与服务端发送过来的hasha值（数字签名）相比较，如果一样则是目标服务端，则里面的公钥可以正常使用。



为网站申请数字证书（ssl）：























