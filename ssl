						https与安全证书的知识总结
在说https之前，要先说一下https的加密机制。众所周知，https的加密机制是采用对称加密和非对称加密两种方式。

对称加密：客户端和服务端共用一个秘钥，即客户端发送的请求信息，服务端用这个秘钥去解密，反之亦然。
缺点：这个秘钥需要双方知晓。那么保证双方知道，就存在一个问题。因为秘钥是由服务端产生并且第一次需要把秘钥明文传输给客户端方便以后使用，那么可能会被别人截取。

非对称加密：即有两把秘钥，一把叫做公钥，一把叫做私钥。用公钥加密的内容只有私钥能解开，私钥加密的内容，只有公钥能解开。
缺点：服务端发送一个公钥给客户端，客户端通过公钥加密解密。但是最开始公钥还是由服务端明文传输给客户端，同样有被截取的可能，随之解密服务端发过来的信息。

非对称加密(改良方案)：用两组公钥和私钥。即服务端有公钥A私钥A，客户端有公钥B私钥B。服务端把公钥A明文传输给客户端，客户端把公钥B明文传输给服务端。之后客户端向服务端传输的信息都用公钥A加密，服务端收到信息后都用私钥A解密，反之亦然。 
注意：https没有使用这种方案，因为非对称加密非常耗时。对称加密很快。

非对称加密+对称加密（https采用的方案）：
服务端有非对称加密的公钥A和私钥A，服务端将公钥A通过明文传输给客户端，客户端随机生成一个秘钥C，通过公钥A加密，传输给服务端，服务端用私钥A解密，就可以得到秘钥C，再通过秘钥C进行对称加密传输。
缺点：如果有人截取了服务端的公钥A，改成自己非对称加密生成的公钥D（同时也有一个私钥D）。此时客户端并不知道服务端的身份，所以将生成的秘钥C使用公钥D加密。再发送给目标服务端，这时伪服务端再次截取客户端发送的信息并通过私钥D解密，从而就拿到了服务端和客户端以后通信的秘钥。

以上问题，所有的难点究其根源，在于客户端和服务端在通过传输的途径知道对方的密钥而不被其他人知道引出的一系列方案。最后变为 如何证明客户端收到的公钥是目标服务端的公钥？ 于是引出数字安全证书(SSL)。


在使用https前，会向ca机构申请一份数字证书。数字证书里面有证书持有者，证书持有者公钥，访问域名，等等信息。服务端把证书传输给客户端，客户端从这个里面取公钥，就能实现收到的公钥是目标服务端的公钥。

那么又有一个问题就是数字证书如果被篡改，会怎么办。 解决的办法就是服务器把证书内容hash加密一下，生成一个数字签名,再一并发送给客户端。客户端收到信息，将证书以同样的方式加密，然后比对生成的hash值是否与服务端发送过来的hasha值（数字签名）相比较，如果一样则是目标服务端，则里面的公钥可以正常使用。























